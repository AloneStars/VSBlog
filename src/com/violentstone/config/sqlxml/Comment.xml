<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2009-2012 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Comment">

  <resultMap type="com.violentstone.entity.comment.Comment" id="Comment">
    <id column="com_id" jdbcType="INTEGER" property="comId"/>
    <result column="questioner" jdbcType="VARCHAR" property="questioner"/>
    <result column="email" jdbcType="VARCHAR" property="email"/>
    <result column="question_date" jdbcType="VARCHAR" property="questionDate"/>   
    <result column="question_content" jdbcType="VARCHAR" property="questionContent"/>
    <result column="blog_id" jdbcType="INTEGER" property="blogId"/>
    <collection property="replyList" resultMap="Reply.reply"/>
  </resultMap>
  
  <insert id="AddComment" parameterType="com.violentstone.entity.comment.Comment">
      INSERT INTO comment(questioner,question_date,email,question_content,blog_id) VALUES(#{questioner},#{questionDate},#{email},#{questionContent},#{blogId})
  </insert>
  
  <delete id="DelCommentByCom" parameterType="INTEGER">
      DELETE FROM comment WHERE com_id = #{_parameter}
  </delete>
  
  <delete id="DelCommentByBlog" parameterType="INTEGER">
      DELETE FROM comment WHERE blog_id = #{_parameter}
  </delete>
  
  <update id="UpdateComment" parameterType="com.violentstone.entity.comment.Comment">
      UPDATE comment set questioner = #{questioner} , question_date = #{questionDate} , email = #{email}, question_content = #{questionContent} , blog_id = #{blogId} WHERE com_id = #{comId}
  </update>
  
  <select id="QueryCommentByCom" parameterType="int" resultMap="Comment">
    SELECT com_id,questioner,question_date,email,question_content,blog_id FROM comment WHERE com_id = #{_parameter}
  </select>
  
  <select id="QueryCommentByBlog" parameterType="int"  resultMap="Comment">
    SELECT com_id,questioner,question_date,email,question_content,blog_id FROM comment WHERE blog_id = #{_parameter}
  </select>
  
</mapper>
